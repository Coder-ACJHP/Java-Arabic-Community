<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" 
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util   
                http://www.springframework.org/schema/util/spring-util.xsd
                http://www.springframework.org/schema/cache 
                http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- Add support for component scanning -->
    <context:component-scan base-package="com.community.web" />
	
    <!-- Add support for reading web resources : css, js, images etc. -->
    <mvc:resources mapping="/resources/**" location="/webjars/, /resources/" >
    <mvc:cache-control cache-public="true" max-age="2592000"/>
    <mvc:resource-chain resource-cache="true">
        <mvc:resolvers>
            <bean class="org.springframework.web.servlet.resource.WebJarsResourceResolver"/>
        </mvc:resolvers>
    </mvc:resource-chain>
    </mvc:resources>
    
<!--    <mvc:resources location="/webjars/" mapping="/webjars/**" />
    <mvc:resources location="/resources/" mapping="/resources/**" />
    <mvc:resources location="/resources/images/" mapping="favicon.ico" />-->
	
    <!-- Get properties file -->
    <util:properties id="countriesOption" location="/WEB-INF/propfiles/countries.properties" />
	
    <!-- Inject values from properties file into this -->
    <context:property-placeholder location="/WEB-INF/propfiles/connections.properties"/>
	
    <!-- Inject multipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1048576" />
        <property name="defaultEncoding" value="utf8" />
    </bean>
        
    <!-- Add support for conversion, formatting and validation support -->
    <mvc:annotation-driven/>

    <!-- Enables the caching through annotations -->
    <cache:annotation-driven />
    
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="questions" />
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="users" />
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="usersMessages" />
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="answers" />
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="favorities" />
            </set>
        </property>
    </bean>

    <!-- Define Spring MVC view resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- Step 1: Define Database DataSource / connection pool -->
    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${get.driverClass}" />
        <property name="jdbcUrl" value="${get.jdbcUrl}" />
        <property name="user" value="${get.user}" />
        <property name="password" value="${get.password}" /> 

        <!-- these are connection pool properties for C3P0 -->
        <property name="minPoolSize" value="3" />
        <property name="maxPoolSize" value="20" />
        <property name="acquireIncrement" value="5" />
        <property name="maxStatements" value="50" />
        <property name="maxIdleTime" value="5000" />

    </bean>  	

    <!-- Step 2: Setup Hibernate session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource" />
        <property name="packagesToScan" value="com.community.web.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.connection.CharSet">utf8</prop>
                <prop key="hibernate.connection.characterEncoding">utf8</prop>
                <prop key="hibernate.connection.useUnicode">true</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>	  

    <!-- Step 3: Setup Hibernate transaction manager -->
    <bean id="myTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- Set internalization -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/propfiles/messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en" />
        <property name="cookieName" value="myAppLocaleCookie" />
        <property name="cookieMaxAge" value="3600" />
    </bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="locale" />
        </bean>
    </mvc:interceptors>	
	
    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="myTransactionManager" />
	
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${get.host}" />
        <property name="port" value="${get.port}" />
        <property name="username" value="${get.emailUsername}" />
        <property name="password" value="${get.emailPassword}" />
 
        <!-- The name of the property, following JavaBean naming conventions -->
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
	            <prop key="mail.smtp.auth">true</prop>
	            <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>
	
    <!-- define spring security bcrypt library -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11" />
    </bean>
</beans>





